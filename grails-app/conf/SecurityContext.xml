<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:sec="http://www.springframework.org/schema/security"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <sec:http realm="OZONE" create-session="stateless">
        <sec:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN" requires-channel="https" />

        <!-- Cannot use <sec:x509> element since it adds an extra authenticationprovider that
             bypasses the caching provider -->
        <sec:custom-filter ref="x509Filter" position="X509_FILTER"/>

        <sec:http-basic/>

        <sec:port-mappings>
            <sec:port-mapping http="${ozone.unsecurePort}" https="${ozone.port}"/>
        </sec:port-mappings>
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <!-- For certs -->
        <sec:authentication-provider ref="cachingPreauthProvider" />
        <!-- For http-basic -->
        <sec:authentication-provider ref="cachingUsernamePasswordAuthProvider"/>
    </sec:authentication-manager>

    <bean id="x509Filter" class="org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <import resource="ozone-security-beans/AuthenticationProviders.xml" />
    <import resource="ozone-security-beans/MethodSecurity.xml" />
</beans>